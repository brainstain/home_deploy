---

- name: Copy K3s service file
  register: k3s_service
  template:
    src: "k3s.service.j2"
    dest: "{{ systemd_dir }}/k3s.service"
    owner: root
    group: root
    mode: 0644

- name: Set existing token
  template:
    src: "k3s.service.env.j2"
    dest: "{{ systemd_dir }}/k3s.service.env"
    owner: root
    group: root
    mode: 0644
  when: token is defined

- name: Enable and check K3s service
  systemd:
    name: k3s
    daemon_reload: yes
    state: restarted
    enabled: yes
  run_once: true
  delegate_to: '{{ ansible_play_batch[0] }}'

- name: Wait for node-token
  wait_for:
    path: "{{ k3s_server_location }}/server/node-token"
  run_once: true
  delegate_to: '{{ ansible_play_batch[0] }}'
  when: token is undefined

- name: Register node-token file access mode
  stat:
    path: "{{ k3s_server_location }}/server/node-token"
  register: p
  run_once: true
  delegate_to: '{{ ansible_play_batch[0] }}'
  when: token is undefined

- name: Change file access node-token
  file:
    path: "{{ k3s_server_location }}/server/node-token"
    mode: "g+rx,o+rx"
  run_once: true
  delegate_to: '{{ ansible_play_batch[0] }}'
  when: token is undefined

- name: Read node-token from master
  slurp:
    path: "{{ k3s_server_location }}/server/node-token"
  register: node_token
  run_once: true
  delegate_to: '{{ ansible_play_batch[0] }}'
  when: token is undefined

- name: Store Master node-token
  set_fact:
    token: "{{ node_token.content | b64decode | regex_replace('\n', '') }}"
  run_once: true
  delegate_to: '{{ ansible_play_batch[0] }}'
  when: token is undefined

- name: Restore node-token file access
  file:
    path: "{{ k3s_server_location }}/server/node-token"
    mode: "{{ p.stat.mode }}"
  run_once: true
  delegate_to: '{{ ansible_play_batch[0] }}'
  when: token is undefined

# set other masters 
- name: Set new token
  template:
    src: "k3s.service.env.j2"
    dest: "{{ systemd_dir }}/k3s.service.env"
    owner: root
    group: root
    mode: 0644

- name: Enable and check K3s service
  systemd:
    name: k3s
    daemon_reload: yes
    state: restarted
    enabled: yes
  throttle: 1

- name: Create directory .kube
  file:
    path: ~{{ ansible_user }}/.kube
    state: directory
    owner: "{{ ansible_user }}"
    mode: "u=rwx,g=rx,o="

- name: Copy config file to user home directory
  copy:
    src: /etc/rancher/k3s/k3s.yaml
    dest: ~{{ ansible_user }}/.kube/config
    remote_src: yes
    owner: "{{ ansible_user }}"
    mode: "u=rw,g=,o="

- name: Replace https://localhost:6443 by https://master-ip:6443
  command: >-
    k3s kubectl config set-cluster default
      --server=https://{{ master_ip }}:6443
      --kubeconfig ~{{ ansible_user }}/.kube/config
  changed_when: true

- name: Create kubectl symlink
  file:
    src: /usr/local/bin/k3s
    dest: /usr/local/bin/kubectl
    state: link

- name: Create crictl symlink
  file:
    src: /usr/local/bin/k3s
    dest: /usr/local/bin/crictl
    state: link